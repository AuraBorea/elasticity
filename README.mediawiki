Elasticity provides programmatic access to Amazon's Elastic Map Reduce service.

There are five API actions in the [http://docs.amazonwebservices.com/ElasticMapReduce/latest/DeveloperGuide/index.html EMR API], described below.  Please see the Amazon guide for details on these operations because the default values aren't obvious (e.g. the meaning of <code>DescribeJobFlows</code> without parameters).

Each Elasticity call provides some level of wrapping to save you the trouble of having to parse XML and deal with common status codes.

Alternatively, you may opt for "direct" access to the API where you specify the params and Elasticity takes care of the signing for you, responding with the XML from Amazon.  Direct access is described below the API catalog.

'''BACKLOG''': Have a look at the backlog  [https://www.pivotaltracker.com/projects/272429 here] (Pivotal Tracker).

'''CREDITS''': AWS signing was used from [http://www.rightscale.com/ RightScale's] amazing [https://github.com/rightscale/right_aws right_aws gem] which works extraordinarily well!  If you need access to any AWS service (EC2, S3, etc.), have a look.

== AddInstanceGroups ==

''(not yet supported)''

== AddJobFlowSteps ==

''(not yet supported)''

== DescribeJobFlows ==

DescribeJobFlows returns detailed information as to the state of all jobs.  Currently this is wrapped in an <code>Elasticity::JobFlow</code> that contains the <code>name</code>, <code>jobflow_id</code> and <code>state</code>.  

<pre>
  > emr = Elasticity::EMR.new(ENV["aws_access_key_id"], ENV["aws_secret_key"])
  > jobflows = emr.describe_jobflows
  > p jobflows.map(&:name)
  ["Hive Test", "Pig Test", "Interactive Hadoop", "Interactive Hive"]
</pre>

== ModifyInstanceGroups ==

A job flow contains several "instance groups" of various types.  These instances are where the work for your EMR task occurs.  After a job flow has been created, you can find these instance groups in the AWS web UI by clicking on a job flow and then clicking on the "Instance Groups" tab.

<pre>
  > emr = Elasticity::EMR.new(ENV["aws_access_key_id"], ENV["aws_secret_key"])
  > emr.modify_instance_groups({"ig-2T1HNUO61BG3O" => 3})
  >
</pre>

If there's an error, you'll receive an ArgumentError containing the message from Amazon.  For example if you attempt to modify an instance group that's part of a terminated job flow:

<pre>
  > emr = Elasticity::EMR.new(ENV["aws_access_key_id"], ENV["aws_secret_key"])
  > emr.modify_instance_groups({"ig-some_terminated_group" => 3})
  ArgumentError: An instance group may only be modified when the job flow is running or waiting
</pre>

Or if you attempt to increase the instance count of the MASTER instance group:

<pre>
  > emr = Elasticity::EMR.new(ENV["aws_access_key_id"], ENV["aws_secret_key"])
  > emr.modify_instance_groups({"ig-some_terminated_group" => 3})
  ArgumentError: A master instance group may not be modified
</pre>

== RunJobFlow ==

''(not yet supported)''

== TerminateJobFlows ==

When the job flow '''exists''', you will receive no output.  This is because Amazon does not return anything other than a 200 when you terminate a job flow :)  You'll want to continuously poll with DescribeJobFlows to see when the job was actually terminated.

<pre>
  > emr = Elasticity::EMR.new(ENV["aws_access_key_id"], ENV["aws_secret_key"])
  > emr.terminate_jobflows("j-BOWBV7884XD0")
  >
</pre>

When the job flow '''doesn't exist''':

<pre>
  > emr = Elasticity::EMR.new(ENV["aws_access_key_id"], ENV["aws_secret_key"])
  > emr.terminate_jobflows("no-flow")
  ArgumentError: Job flow 'no-flow' does not exist.
</pre>

= Direct Response Access =

If you're fine with Elasticity's invocation wrapping and would prefer to get at the resulting XML rather than the wrapped response, throw a block our way and we'll yield the result.  This still saves you the trouble of having to create the params and sign the request yet gives you direct access to the response XML for your parsing pleasure.

<pre>
  > emr = Elasticity::EMR.new(ENV["aws_access_key_id"], ENV["aws_secret_key"])
  > emr.describe_jobflows{|xml| puts xml[0..77]}
  <DescribeJobFlowsResponse xmlns="http://elasticmapreduce.amazonaws.com/doc/200
</pre>

= Direct Request/Response Access =

If you're chomping at the bit to initiate some EMR functionality that isn't wrapped (or isn't wrapped in a way you prefer :) feel free to access the AWS EMR API directly by using <code>EMR.direct()</code>.  You can find the allowed values in Amazon's EMR API [http://docs.amazonwebservices.com/ElasticMapReduce/latest/DeveloperGuide/index.html developer documentation].

<pre>
  > emr = Elasticity::EMR.new(ENV["aws_access_key_id"], ENV["aws_secret_key"])
  > params = {"Operation" => "DescribeJobFlows"}
  > result_xml = emr.direct(params)
  > result_xml[0..78]
  <DescribeJobFlowsResponse xmlns="http://elasticmapreduce.amazonaws.com/doc/2009
</pre>

<!-- __NOTOC__ -->